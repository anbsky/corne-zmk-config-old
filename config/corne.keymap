/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define LOWER    1
#define RAISE    2
#define ADJUST  3
#define NAVI  4

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <100>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
		compatible = "zmk,combos";
        combo_grave_navi {
            timeout-ms = <50>;
            key-positions = <30 43>;
            bindings = <&mo NAVI>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
// |  TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | CMD | RSE | SPC |   | ENT | LWR  | ALT |
                        bindings = <
   &kp ESC   &kp Q        &kp W       &kp E       &kp R        &kp T       &kp Y   &kp U        &kp I       &kp O       &kp P           &kp BSPC
   &kp TAB   &hm LCTRL A &bhm LALT S &bhm LCMD D &bhm LSHFT F &kp G       &kp H   &bhm RSHFT J &bhm RCMD K &bhm RALT L &bhm RCTRL SEMI &kp SQT
   &kp LSHFT &kp Z        &kp X       &kp C       &kp V        &kp B       &kp N   &kp M        &kp COMMA   &kp DOT     &kp FSLH        &kp BSLH
                                      &kp LCMD    &mo RAISE    &kp SPACE   &kp RET &mo LOWER    &kp LCTRL
                        >;
                };

                lower_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | GRAVE |     |     |     |     |     |   |     | HOME | PGDN | PGUP | END   |   _  |
// | LCTRL |     |     |     |     |     |   |     | LEFT | DOWN |  UP  | RIGHT |   -  |
// | SHIFT |     |     |     |     |     |   | [{  |  }]  |  ,   |   .  |       | CTRL |
//                     | CMD | RSE | SPC |   | ENT | RSE  |      |
			            bindings = <
	&kp GRAVE &trans &trans &trans &trans &trans    &trans       &kp HOME &kp PG_DN  &kp PG_UP      &kp END   &kp UNDERSCORE
	&kp LCTRL &trans &trans &trans &trans &trans    &trans       &kp LEFT &kp DOWN   &kp UP         &kp RIGHT &kp MINUS
	&kp LSHFT &trans &trans &trans &trans &trans    &kp LBKT     &kp RBKT &kp KP_DOT &kp LS(KP_DOT) &none     &kp RCTRL
                            &trans &trans &trans    &kp KP_ENTER &trans   &trans
		            	>;
		        };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | GRAVE |  @  |  &  |  {  |  }  |  *  |   |     |  7   |  8   |  9   |     |   _  |
// | BSPC  |  $  |  %  |  (  |  )  |  =  |   |     |  4   |  5   |  6   |     |   _  |
// | SHFT  |  ^  |  #  |  [  |  ]  |  !  |   |  0  |  1   |  2   |  3   |     |      |
//                     | CMD |     | SPC |   | ENT |      |      |
                        bindings = <
	&kp GRAVE &kp AT    &kp AMPS  &kp LBRC &kp RBRC &kp STAR   &none      &kp N7 &kp N8 &kp N9 &trans &kp UNDERSCORE
	&kp BSPC  &kp DLLR  &kp PRCNT &kp LPAR &kp RPAR &kp EQL    &none      &kp N4 &kp N5 &kp N6 &trans &kp MINUS
	&kp LSHFT &kp CARET &kp HASH  &kp LBKT &kp RBKT &kp EXCL   &kp N0     &kp N1 &kp N2 &kp N3 &trans &trans
                    	          &trans   &trans   &kp SPACE  &kp RET    &trans    &trans
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// | GRAVE |  @  |  &  |  {  |  }  |  *  |   | BT+ |      |      |      |     | BTCLR |
// | BSPC  |  $  |  %  |  (  |  )  |  =  |   | BT- |  ^   |      |      |     |       |
// | SHFT  |  ^  |  #  |  [  |  ]  |  !  |   | BT0 |  BT1 |  BT2 |  BT3 |     |       |
//                     | CMD |     | SPC |   | ENT |      |      |
                        bindings = <
	&kp GRAVE &kp AT    &kp AMPS  &kp LBRC &kp RBRC &kp STAR     &bt BT_NXT   &none        &none        &none        &none &bt BT_CLR
	&kp BSPC  &kp DLLR  &kp PRCNT &kp LPAR &kp RPAR &kp EQL      &bt BT_PRV   &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP &none &none
	&kp LSHFT &kp CARET &kp HASH  &kp LBKT &kp RBKT &kp EXCL     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &none &none
                    	          &trans   &trans   &kp SPACE    &kp RET      &none        &none
                        >;
                };
        };
};
