/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEFAULT 0
#define LOWER    1
#define RAISE    2
#define ADJUST  3
#define NAVI  4

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <100>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
		compatible = "zmk,combos";
        combo_grave_navi {
            timeout-ms = <50>;
            key-positions = <30 43>;
            bindings = <&mo NAVI>;
        };
    };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// |  TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | LWR | CMD | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp ESC   &kp Q        &kp W       &kp E       &kp R        &kp T       &kp Y   &kp U        &kp I       &kp O       &kp P           &kp MINUS
   &kp TAB &bhm LCTRL A &bhm LALT S &bhm LCMD D &bhm LSHFT F &kp G       &kp H   &bhm RSHFT J &bhm RCMD K &bhm RALT L &bhm RCTRL SEMI &kp SQT
   &kp LSHFT &kp Z        &kp X       &kp C       &kp V        &kp B       &kp N   &kp M        &kp COMMA   &kp DOT     &kp FSLH        &kp BSLH
                                      &mo LOWER   &kp LCMD     &kp SPACE   &kp RET &mo LOWER    &kp LALT
                        >;
                };

                lower_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// | GRAVE |  @  |  &  |  {  |  }  |  *  |   | PGU | LAL  | HOME |  END | LAR   | BSPC |
// | TAB   |  $  |  %  |  (  |  )  |  =  |   | PGD | LEFT | DOWN |  UP  | RIGHT |  DEL |
// | SHIFT |  ^  |  #  |  [  |  ]  |  !  |   | [{  |  }]  |  ,   |   .  |       | CTRL |
//                     | LWR | CMD | SPC |   | ENT | RSE  |      |
			            bindings = <
	&kp GRAVE &kp AT    &kp AMPS  &kp LBRC &kp RBRC &kp STAR      &kp PG_UP  &kp LA(LEFT) &kp HOME   &kp END        &kp LA(RIGHT) &kp BSPC
	&kp TAB   &kp DLLR  &kp PRCNT &kp LPAR &kp RPAR &kp EQL       &kp PG_DN  &kp LEFT     &kp DOWN   &kp UP         &kp RIGHT     &kp DEL
	&kp LSHFT &kp CARET &kp HASH  &kp LBKT &kp RBKT &kp EXCL      &kp LBKT   &kp RBKT     &kp KP_DOT &kp LS(KP_DOT) &none         &kp RCTRL
                                  &trans   &trans   &trans        &trans     &trans       &trans
			>;
		};

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
